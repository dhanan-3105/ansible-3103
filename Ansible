plugin: oracle.oci.oci

regions:
 - eu-frankfurt-1

compartments:
 - compartment_ocid: ""
   fetch_hosts_from_subcompartments: false


createfile.yaml
===============

---
- hosts: localhost
  become: true
  tasks:
    - name : create file
      file: path=/tmp/testfile state=touch
    - name : print
      debug:
       msg: file created


---
 - hosts: localhost
   become: true
   tasks:
   - name: install packages
     yum: name={{item}} state=latest
     loop:
      - openssl-devel
      - git
      - htop
      
      
---
# This is a Block Name 
- hosts: localhost
  become: true
  tasks:
  - name : install http
    yum: name=httpd state=latest
  - name: start and enable httpd
    service: name=httpd state=restarted enabled=yes
  handlers:
  - name: restart apache
    service: name=httpd state=restarted
    
 Remote-file.yaml
- name: read file on host
  hosts: all
  remote_user: opc
  vars:
   contents: " "
  tasks:
   - name: Read the file
     command: cat /home/opc/.ssh/authorized_keys
     register: contents

   - name: print file
     debug:
      msg: "the content of file is {{ contents }}"

   - name: write a file
     file: path=/home/opc/configfiles state=touch

   - name: delete a file
     file: path=/home/opc/configfiles state=absent

   - name: closure
     debug:
        msg : "file created in {{inventory_hostname}}"
        
        
  
- name: Add several users
  hosts: all
  remote_user: opc
  become: yes
  tasks:
  -  name: users
     ansible.builtin.user:
        name: "{{ item }}"
        state: present
        groups: "wheel"
     loop:
        - testuser11
        - testuser21
  -  name: print users
     debug:
        msg: "Print the users"


- hosts: all
  gather_facts: yes
  become: false
  remote_user: opc
  tasks:
  - name: Distribution
    debug: msg="{{ ansible_distribution }}"
  - name: Distribution version
    debug: msg="{{ ansible_distribution_version}}"
  - name: Distribution major version
    debug: msg="{{ ansible_distribution_major_version }}"
    
    
 
- hosts: localhost
  connection: local
  become: yes
  tasks:
    - name: install podman
      command: yum install -y podman
    - name: deploy nginx podman container
      command: podman run -d  --name testnginx --privileged -p 8085:80 nginx
    - name: list all containers
      command: podman  ps -a
    - name: verify service working
      command: curl {{ansible_hostname}}:8085
    - name: remove container
      command : podman rm -f testnginx

